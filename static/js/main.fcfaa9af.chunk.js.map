{"version":3,"sources":["components/icons/assets/flag.svg","components/icons/assets/bomb.svg","utils/numbers.js","utils/game/board.js","features/game/slice.js","app/store.js","components/GameWrapper/GameWrapper.js","components/GameWrapper/index.js","components/CellGrid/CellGrid.js","components/CellGrid/index.js","components/icons/Image.js","components/icons/Flag.js","components/icons/Bomb.js","components/Cell/Cell.js","components/Cell/index.js","components/Header/Header.js","components/Header/index.js","features/game/Header.js","features/game/Game.js","App.js","index.js"],"names":["module","exports","randomInt","exclusiveMax","min","max","inclusive","Math","ceil","floor","random","getRandomInt","range","result","i","abs","push","getSurroundingCoords","board","row","col","rowMax","length","colMax","results","r","c","createEmptyBoard","rows","cols","map","createCell","generateMineCoords","mineCount","safeR","safeC","set","Set","x","y","t","has","add","isMine","value","isFlagged","isRevealed","coords","key","revealBoardCell","cell","rx","cx","filter","forEach","initialState","mines","initialized","flags","gameOver","lost","slice","createSlice","name","reducers","newGame","state","action","payload","initialize","safeCoords","undefined","mineCoords","mine","generateBoard","revealCell","flatMap","every","checkWin","flagCell","actions","selectGame","game","selectHeader","configureStore","reducer","gameReducer","styled","GameWrapper","div","CellGrid","props","img","size","Flag","Image","src","flag","Bomb","bomb","textColors","Container","button","Number","span","number","BUTTON_SIZE","Mine","Visible","Cell","onClick","onRightClick","handleClick","e","handleRightClick","preventDefault","onContextMenu","StatsContainer","ButtonContainer","Button","Text","Fill","Divider","hr","Header","onNewGameClick","difficulty","data","useSelector","dispatch","useDispatch","ng","Game","handleCellClick","handleCellRightClick","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,yJCApC,SAASC,EAAUC,GACxB,OAGF,SAAsBC,EAAKC,GAAyB,IAApBC,EAAmB,wDAGjD,OAFAF,EAAMG,KAAKC,KAAKJ,GAChBC,EAAME,KAAKE,MAAMJ,GACVE,KAAKE,MAAMF,KAAKG,UAAYL,EAAMD,GAAOE,EAAY,EAAI,KAAOF,EANhEO,CAAa,EAAGR,GASlB,SAASS,EAAMT,GAEpB,IADA,IAAMU,EAAS,GACNC,EAAI,EAAGA,EAAIP,KAAKQ,IAAIZ,GAAeW,IAAKD,EAAOG,KAAKF,GAC7D,OAAOD,ECqBT,SAASI,EAAqBC,EAAOC,EAAKC,GAIxC,IAHA,IAAMC,EAASH,EAAMI,OACfC,EAASL,EAAM,GAAGI,OAClBE,EAAU,GACPC,EAAIN,EAAM,EAAGM,GAAKN,EAAM,EAAGM,IAClC,KAAIA,EAAI,GAAKA,GAAKJ,GAClB,IAAK,IAAIK,EAAIN,EAAM,EAAGM,GAAKN,EAAM,EAAGM,IAC9BA,EAAI,GAAKA,GAAKH,GACdE,IAAMN,GAAOO,IAAMN,GACvBI,EAAQR,KAAK,CAACS,EAAGC,IAGrB,OAAOF,EAGF,SAASG,IAAsC,IAArBC,EAAoB,uDAAb,EAAGC,EAAU,uDAAH,EAChD,OAAOjB,EAAMgB,GAAME,KAAI,SAACL,GAAD,OAAOb,EAAMiB,GAAMC,KAAI,SAACJ,GAAD,OAAOK,EAAWN,EAAGC,SAGrE,SAASM,EAAmBC,EAAWL,EAAMC,GAG3C,IAH6E,IAAD,yDAAV,EAAE,GAAI,GAAI,mBAA1BK,EAA0B,KAAnBC,EAAmB,KACtEX,EAAU,GACVY,EAAM,IAAIC,IACTb,EAAQF,OAASW,GAAW,CACjC,IAAMK,EAAIpC,EAAU0B,GACdW,EAAIrC,EAAU2B,GACpB,GAAIS,IAAMJ,GAASK,IAAMJ,EAAzB,CACA,IAAMK,EAAC,UAAMF,EAAN,YAAWC,GACdH,EAAIK,IAAID,KACZJ,EAAIM,IAAIF,GACRhB,EAAQR,KAAK,CAACsB,EAAGC,MAEnB,OAAOf,EAGT,SAASO,EAAWZ,EAAKC,GACvB,MAAO,CACLuB,QAAQ,EACRC,MAAO,EACPC,WAAW,EACXC,YAAY,EACZC,OAAQ,CACN5B,MACAC,MACA4B,IAAI,GAAD,OAAK7B,EAAL,YAAYC,KASd,SAAS6B,EAAgB/B,EAAOC,EAAKC,GAC1C,IAAM8B,EAAOhC,EAAMC,GAAKC,GAExB,OADA8B,EAAKJ,YAAa,IACdI,EAAKP,SACU,IAAfO,EAAKN,OAAgBM,EAAKL,WAAcK,EAAKP,QAC/C1B,EAAqBC,EAAOC,EAAKC,GAC9BU,KAAI,mCAAEqB,EAAF,KAAMC,EAAN,YAAclC,EAAMiC,GAAIC,MAC5BC,QAAO,SAAC3B,GAAD,OAAQA,EAAEmB,YAAcnB,EAAEiB,SAAWjB,EAAEoB,cAC9CQ,SAAQ,SAAC5B,GACRuB,EAAgB/B,EAAOQ,EAAEqB,OAAO5B,IAAKO,EAAEqB,OAAO3B,SAG7C,GCzFT,IAKamC,EAAe,CAC1BrC,MAHiBS,EAHC,EACA,EACC,IAKnBC,KAPkB,EAQlBC,KAPkB,EAQlB2B,MAPmB,GAQnBC,aAAa,EACbC,MAAO,EACPC,UAAU,EACVC,MAAM,GAGKC,EAAQC,YAAY,CAC/BC,KAAM,OACNR,eACAS,SAAU,CACRC,QADQ,SACAC,EAAOC,GAAS,IAAD,EAKjBA,EAAOC,QALU,IAEnBxC,YAFmB,MApBP,EAoBO,MAGnBC,YAHmB,MAnBP,EAmBO,MAInB2B,aAJmB,MAlBN,GAkBM,EAMrBU,EAAMT,aAAc,EACpBS,EAAMhD,MAAQS,EAAiBC,EAAMC,GACrCqC,EAAMV,MAAQA,EACdU,EAAMtC,KAAOA,EACbsC,EAAMrC,KAAOA,GAEfwC,WAbQ,SAaGH,EAAOC,GAAS,IACjBvC,EAAmCsC,EAAnCtC,KAAMC,EAA6BqC,EAA7BrC,KAAM2B,EAAuBU,EAAvBV,MACpB,IAD2CU,EAAhBT,YAC3B,CAFwB,MAGHU,EAAOC,QAApBjD,EAHgB,EAGhBA,IAAKC,EAHW,EAGXA,IACb8C,EAAMT,aAAc,EACpBS,EAAMhD,MD5CL,WAKJ,IAJDU,EAIA,uDAJO,EACPC,EAGA,uDAHO,EACP2B,EAEA,uDAFQ,GACRc,EACA,4DADaC,EAEPrD,EAAQS,EAAiBC,EAAMC,GAC/B2C,EAAaxC,EAAmBwB,EAAO5B,EAAMC,EAAMyC,GASzD,OARAE,EAAWlB,SAAQ,YAAiB,IAAD,mBAAdnC,EAAc,KAATC,EAAS,KACjCF,EAAMC,GAAKC,GAAKuB,QAAS,EACzBzB,EAAMC,GAAKC,GAAKwB,MAAQ,KACxB3B,EAAqBC,EAAOC,EAAKC,GAAKkC,SAAQ,YAAa,IAAD,mBAAV7B,EAAU,KAAPC,EAAO,KAClDwB,EAAOhC,EAAMO,GAAGC,GACjBwB,EAAKuB,MAAMvB,EAAKN,cAGlB1B,EC4BWwD,CAAc9C,EAAMC,EAAM2B,EAAO,CAACrC,EAAKC,IACrD6B,EAAgBiB,EAAMhD,MAAOC,EAAKC,KAEpCuD,WArBQ,SAqBGT,EAAOC,GAAS,IAAD,EACHA,EAAOC,QAApBjD,EADgB,EAChBA,IAAKC,EADW,EACXA,IACA8C,EAAMhD,MAAMC,GAAKC,GACrByB,WACPqB,EAAMR,QAEJT,EAAgBiB,EAAMhD,MAAOC,EAAKC,IACrB8C,EAAMhD,MD8CrBoC,SAAQ,SAACnC,GAAD,OAASA,EAAImC,SAAQ,SAACJ,GAAD,OAAWA,EAAKJ,YAAa,QC7C1DoB,EAAMP,UAAW,EACjBO,EAAMN,MAAO,GD+Cd,SAAkB1C,GACvB,OAAOA,EACJ0D,SAAQ,SAAC1B,GAAD,OAAUA,KAClB2B,OAAM,SAAC3B,GAAD,OAAWA,EAAKP,QAAUO,EAAKJ,cCjDzBgC,CAASZ,EAAMhD,SACxBgD,EAAMP,UAAW,EACjBO,EAAMN,MAAO,IAGjBmB,SApCQ,SAoCCb,EAAOC,GAAS,IAAD,EACDA,EAAOC,QAApBjD,EADc,EACdA,IAAKC,EADS,EACTA,IACP8B,EAAOgB,EAAMhD,MAAMC,GAAKC,GAC1B8B,EAAKJ,aACToB,EAAMR,OAASR,EAAKL,WAAa,EAAI,EACrCK,EAAKL,WAAaK,EAAKL,e,EAKgCgB,EAAMmB,QAApDX,E,EAAAA,WAAYJ,E,EAAAA,QAASU,E,EAAAA,WAAYI,E,EAAAA,SAEzC,SAASE,EAAWf,GAAQ,IAAD,EACWA,EAAMgB,KACjD,MAAO,CAAEtD,KAFuB,EACxBA,KACOC,KAFiB,EAClBA,KACO4B,YAFW,EACZA,YACcvC,MAFF,EACCA,OAI5B,SAASiE,EAAajB,GAAQ,IAAD,EACGA,EAAMgB,KAC3C,MAAO,CAAEtD,KAFyB,EAC1BA,KACOC,KAFmB,EACpBA,KACO2B,MAFa,EACdA,MACQE,MAFM,EACPA,OAIdG,QAAf,QCnFeuB,cAAe,CAC5BC,QAAS,CACPH,KAAMI,K,qKCHKC,ICAAC,EDAAD,IAAOE,IAAtB,K,8REAA,ICAeC,EDAFH,IAAOE,IAAV,KAEqB,SAACE,GAAD,OAAWA,EAAM/D,QACd,SAAC+D,GAAD,OAAWA,EAAM9D,Q,iHEHpC0D,UAAOK,IAAtB,KACW,SAAAD,GAAK,OAAIA,EAAME,QACd,SAAAF,GAAK,OAAIA,EAAME,Q,iBCAZ,SAASC,EAAT,GAAyB,IAATD,EAAQ,EAARA,KAC7B,OAAO,kBAACE,EAAD,CAAOF,KAAMA,EAAMG,IAAKC,M,qBCDlB,SAASC,EAAT,GAAyB,IAATL,EAAQ,EAARA,KAC7B,OAAO,kBAACE,EAAD,CAAOF,KAAMA,EAAMG,IAAKG,M,8gBCAjC,IAAMC,EAAa,CACjB,KACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAKIC,EAAYd,IAAOe,OAAV,IAFK,OAYE,SAACX,GAAD,OAAYA,EAAM7C,WAAa,OAAS,UAGtC,SAAC6C,GAAD,OAAYA,EAAM7C,WAAa,OAAS,UAO1DyD,EAAShB,IAAOiB,KAAV,KACD,SAACb,GAAD,OAAWS,EAAWT,EAAMc,WAKvC,SAASX,EAAKH,GACZ,OACE,kBAACU,EAAcV,EACb,kBAACG,EAAD,CAAUD,KAAMa,MAKtB,SAASC,EAAKhB,GACZ,OACE,kBAACU,EAAD,eAAWvD,YAAU,GAAK6C,GACxB,kBAACO,EAAD,CAAUL,KAAMa,MAKtB,SAASE,EAAT,GAAuC,IAApBhE,EAAmB,EAAnBA,MAAU+C,EAAS,yBACpC,OAAc,IAAV/C,GAAgC,qBAAVA,EACjB,kBAACyD,EAAD,eAAWvD,YAAU,GAAK6C,IAEjC,kBAACU,EAAD,eAAWvD,YAAU,GAAK6C,GACxB,kBAAC,EAAD,CAAQc,OAAQ7D,GAAQA,IChEfiE,MDqEA,YAOX,IANFjE,EAMC,EANDA,MAMC,IALDD,cAKC,aAJDE,iBAIC,aAHDC,kBAGC,aAFDgE,eAEC,MAFS,aAET,MADDC,oBACC,MADc,aACd,EACD,SAASC,EAAYC,GACnBH,EAAQ,CAAElE,QAAOD,SAAQE,YAAWC,eAGtC,SAASoE,EAAiBD,GACxBA,EAAEE,iBACFJ,EAAa,CAAEnE,QAAOD,SAAQE,YAAWC,eAG3C,OAAKA,GAAcD,EACV,kBAAC,EAAD,CAAMiE,QAASE,EAAaI,cAAeF,IACzCpE,GAAcH,EAChB,kBAACgE,EAAD,CAAMG,QAASE,EAAaI,cAAeF,IACzCpE,EAEP,kBAAC8D,EAAD,CACEE,QAASE,EACTpE,MAAOA,EACPwE,cAAeF,IAIZ,kBAACb,EAAD,CAAWS,QAASE,EAAaI,cAAeF,K,y1CElG3D,IAAMb,GAAYd,IAAOE,IAAV,MAWT4B,GAAiB9B,IAAOE,IAAV,MAUd6B,GAAkB/B,IAAOE,IAAV,MAMf8B,GAAShC,IAAOe,OAAV,MAcNkB,GAAOjC,IAAOE,IAAV,MAUJgC,GAAOlC,IAAOE,IAAV,KAIJiC,GAAUnC,IAAOoC,GAAV,KCxDEC,OD8DA,YAMX,IALFhG,EAKC,EALDA,KACAC,EAIC,EAJDA,KACA2B,EAGC,EAHDA,MACAE,EAEC,EAFDA,MAEC,IADDmE,sBACC,MADgB,aAChB,EACD,SAASb,EAAYc,GACnBD,EAAeC,GAGjB,OACE,kBAAC,GAAD,KACE,kBAACT,GAAD,KACE,sCAAYzF,GACZ,sCAAYC,GACZ,uCAAa2B,GACb,uCAAaE,IAEf,kBAACgE,GAAD,MACA,kBAACJ,GAAD,KACE,kBAACG,GAAD,MACA,kBAACD,GAAD,aACA,kBAACD,GAAD,CAAQT,QAAS,kBAAME,EAAY,cAAnC,YACA,kBAACO,GAAD,CAAQT,QAAS,kBAAME,EAAY,kBAAnC,gBAGA,kBAACO,GAAD,CAAQT,QAAS,kBAAME,EAAY,YAAnC,UACA,kBAACS,GAAD,SEvFO,SAASG,KACtB,IAAMG,EAAOC,YAAY7C,GACnB8C,EAAWC,cAEjB,SAASC,EAAGvG,EAAMC,EAAM2B,GACtB,OAAOS,EAAQ,CAAErC,OAAMC,OAAM2B,UAe/B,OAAO,kBAAC,GAAD,iBAAqBuE,EAArB,CAA2BF,eAZlC,SAAuBC,GACrB,OAAQA,GACN,IAAK,eACHG,EAASE,EAAG,GAAI,GAAI,KACpB,MACF,IAAK,SACHF,EAASE,EAAG,GAAI,GAAI,KACpB,MACF,QACEF,EAASE,EAAG,EAAG,EAAG,UCdX,SAASC,KAAQ,IAAD,EACcJ,YAAY/C,GAA/C/D,EADqB,EACrBA,MAAOuC,EADc,EACdA,YAAa5B,EADC,EACDA,KAAMD,EADL,EACKA,KAC5BqG,EAAWC,cAEjB,SAASG,EAAgBnF,GACvB,OAAO,WAAa,IAAD,EACIA,EAAKH,OAAlB5B,EADS,EACTA,IAAKC,EADI,EACJA,IAER6G,EADAxE,EACSkB,EAAW,CAAExD,MAAKC,QADLiD,EAAW,CAAElD,MAAKC,UAKjD,SAASkH,EAAqBpF,GAC5B,OAAO,WAAa,IAAD,EACIA,EAAKH,OAAlB5B,EADS,EACTA,IAAKC,EADI,EACJA,IACRqC,GACLwE,EAASlD,EAAS,CAAE5D,MAAKC,UAI7B,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAUQ,KAAMA,EAAMC,KAAMA,GACzBX,EACE0D,SAAQ,SAAClD,GAAD,OAAOA,KACfI,KAAI,SAACoB,GAAD,OACH,kBAAC,EAAD,eACEF,IAAKE,EAAKH,OAAOC,IACjB8D,QAASuB,EAAgBnF,GACzB6D,aAAcuB,EAAqBpF,IAC/BA,SCpCH,SAASqF,KACtB,OAAO,kBAACH,GAAD,M,MCGTI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAACJ,GAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.fcfaa9af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag.2dbeae25.svg\";","module.exports = __webpack_public_path__ + \"static/media/bomb.5d5e9d0a.svg\";","export function randomInt(exclusiveMax) {\n  return getRandomInt(0, exclusiveMax)\n}\n\nfunction getRandomInt(min, max, inclusive = false) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + (inclusive ? 1 : 0))) + min\n}\n\nexport function range(exclusiveMax) {\n  const result = []\n  for (let i = 0; i < Math.abs(exclusiveMax); i++) result.push(i)\n  return result\n}\n","import { randomInt, range } from 'utils/numbers'\n\nexport function generateBoard(\n  rows = 9,\n  cols = 9,\n  mines = 10,\n  safeCoords = undefined,\n) {\n  const board = createEmptyBoard(rows, cols)\n  const mineCoords = generateMineCoords(mines, rows, cols, safeCoords)\n  mineCoords.forEach(([row, col]) => {\n    board[row][col].isMine = true\n    board[row][col].value = null\n    getSurroundingCoords(board, row, col).forEach(([r, c]) => {\n      const cell = board[r][c]\n      if (!cell.mine) cell.value++\n    })\n  })\n  return board\n}\n\nexport function print(board) {\n  board.forEach((row) => {\n    const rowText = row\n      .map(({ isMine, value }) => {\n        if (isMine) return '[*]'\n        if (value === 0) return '[ ]'\n        return `[${value}]`\n      })\n      .join('')\n    console.log(rowText)\n  })\n}\n\nfunction getSurroundingCoords(board, row, col) {\n  const rowMax = board.length\n  const colMax = board[0].length\n  const results = []\n  for (let r = row - 1; r <= row + 1; r++) {\n    if (r < 0 || r >= rowMax) continue\n    for (let c = col - 1; c <= col + 1; c++) {\n      if (c < 0 || c >= colMax) continue\n      if (r === row && c === col) continue\n      results.push([r, c])\n    }\n  }\n  return results\n}\n\nexport function createEmptyBoard(rows = 9, cols = 9) {\n  return range(rows).map((r) => range(cols).map((c) => createCell(r, c)))\n}\n\nfunction generateMineCoords(mineCount, rows, cols, [safeR, safeC] = [-1, -1]) {\n  const results = []\n  const set = new Set()\n  while (results.length < mineCount) {\n    const x = randomInt(rows)\n    const y = randomInt(cols)\n    if (x === safeR && y === safeC) continue\n    const t = `${x},${y}`\n    if (set.has(t)) continue\n    set.add(t)\n    results.push([x, y])\n  }\n  return results\n}\n\nfunction createCell(row, col) {\n  return {\n    isMine: false,\n    value: 0,\n    isFlagged: false,\n    isRevealed: false,\n    coords: {\n      row,\n      col,\n      key: `${row},${col}`,\n    },\n  }\n}\n\nexport function getSize(board) {\n  return [board.length, board[0].length]\n}\n\nexport function revealBoardCell(board, row, col) {\n  const cell = board[row][col]\n  cell.isRevealed = true\n  if (cell.isMine) return true\n  if (cell.value === 0 && !cell.isFlagged && !cell.isMine) {\n    getSurroundingCoords(board, row, col)\n      .map(([rx, cx]) => board[rx][cx])\n      .filter((c) => !c.isFlagged && !c.isMine && !c.isRevealed)\n      .forEach((c) => {\n        revealBoardCell(board, c.coords.row, c.coords.col)\n      })\n  }\n  return false\n}\n\nexport function revealAllCells(board) {\n  board.forEach((row) => row.forEach((cell) => (cell.isRevealed = true)))\n}\n\nexport function checkWin(board) {\n  return board\n    .flatMap((cell) => cell)\n    .every((cell) => !cell.isMine && cell.isRevealed)\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  createEmptyBoard,\n  generateBoard,\n  revealBoardCell,\n  revealAllCells,\n  checkWin,\n} from 'utils/game/board'\n\nconst initialRows = 9\nconst initialCols = 9\nconst initialMines = 10\nconst emptyBoard = createEmptyBoard(initialRows, initialCols, initialMines)\n\nexport const initialState = {\n  board: emptyBoard,\n  rows: initialRows,\n  cols: initialCols,\n  mines: initialMines,\n  initialized: false,\n  flags: 0,\n  gameOver: false,\n  lost: false,\n}\n\nexport const slice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    newGame(state, action) {\n      const {\n        rows = initialRows,\n        cols = initialCols,\n        mines = initialMines,\n      } = action.payload\n      state.initialized = false\n      state.board = createEmptyBoard(rows, cols)\n      state.mines = mines\n      state.rows = rows\n      state.cols = cols\n    },\n    initialize(state, action) {\n      const { rows, cols, mines, initialized } = state\n      if (initialized) return\n      const { row, col } = action.payload\n      state.initialized = true\n      state.board = generateBoard(rows, cols, mines, [row, col])\n      revealBoardCell(state.board, row, col)\n    },\n    revealCell(state, action) {\n      const { row, col } = action.payload\n      const cell = state.board[row][col]\n      if (cell.isFlagged) {\n        state.flags--\n      }\n      if (revealBoardCell(state.board, row, col)) {\n        revealAllCells(state.board)\n        state.gameOver = true\n        state.lost = true\n      } else if (checkWin(state.board)) {\n        state.gameOver = true\n        state.lost = false\n      }\n    },\n    flagCell(state, action) {\n      const { row, col } = action.payload\n      const cell = state.board[row][col]\n      if (cell.isRevealed) return\n      state.flags += cell.isFlagged ? -1 : 1\n      cell.isFlagged = !cell.isFlagged\n    },\n  },\n})\n\nexport const { initialize, newGame, revealCell, flagCell } = slice.actions\n\nexport function selectGame(state) {\n  const { rows, cols, initialized, board } = state.game\n  return { rows, cols, initialized, board }\n}\n\nexport function selectHeader(state) {\n  const { rows, cols, mines, flags } = state.game\n  return { rows, cols, mines, flags }\n}\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport gameReducer from 'features/game/slice'\n\nexport default configureStore({\n  reducer: {\n    game: gameReducer,\n  },\n})\n","import styled from 'styled-components'\n\nexport default styled.div`\n  width: 100%;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n`\n","import GameWrapper from './GameWrapper'\n\nexport default GameWrapper\n","import styled from 'styled-components'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-rows: repeat(${(props) => props.rows}, 1fr);\n  grid-template-columns: repeat(${(props) => props.cols}, 1fr);\n  grid-gap: 1px;\n  width: fit-content;\n  background-color: #bbb;\n  border: #bbb solid 1px;\n  margin: 10px;\n`\n\nexport default Grid","import CellGrid from './CellGrid'\n\nexport default CellGrid\n","import styled from 'styled-components'\n\nexport default styled.img`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px\n`","import React from 'react'\nimport Image from './Image'\nimport flag from './assets/flag.svg'\n\nexport default function Flag({ size }) {\n  return <Image size={size} src={flag} />\n}\n","import React from 'react'\nimport Image from './Image'\nimport bomb from './assets/bomb.svg'\n\nexport default function Bomb({ size }) {\n  return <Image size={size} src={bomb} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport FlagIcon from 'components/icons/Flag'\nimport BombIcon from 'components/icons/Bomb'\n\nconst textColors = [\n  null,\n  '#0C01FB',\n  '#048004',\n  '#FD0302',\n  '#030181',\n  '#800402',\n  '#028080',\n  '#000000',\n  '#808080',\n]\n\nconst BUTTON_SIZE = 26\n\nconst Container = styled.button`\n  width: ${BUTTON_SIZE}px;\n  height: ${BUTTON_SIZE}px;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  border: 0;\n  outline: 0;\n  background-color: ${(props) => (props.isRevealed ? '#ccc' : '#eee')};\n  cursor: pointer;\n  :hover {\n    background-color: ${(props) => (props.isRevealed ? '#ccc' : '#ddd')};\n  }\n  :active {\n    background-color: #ccc;\n  }\n`\n\nconst Number = styled.span`\n  color: ${(props) => textColors[props.number]};\n  font-weight: bold;\n  font-family: 'Open Sans';\n`\n\nfunction Flag(props) {\n  return (\n    <Container {...props}>\n      <FlagIcon size={BUTTON_SIZE - 4} />\n    </Container>\n  )\n}\n\nfunction Mine(props) {\n  return (\n    <Container isRevealed {...props}>\n      <BombIcon size={BUTTON_SIZE - 4} />\n    </Container>\n  )\n}\n\nfunction Visible({ value, ...props }) {\n  if (value === 0 || typeof value === 'undefined')\n    return <Container isRevealed {...props} />\n  return (\n    <Container isRevealed {...props}>\n      <Number number={value}>{value}</Number>\n    </Container>\n  )\n}\n\nexport default function Cell({\n  value,\n  isMine = false,\n  isFlagged = false,\n  isRevealed = false,\n  onClick = () => {},\n  onRightClick = () => {},\n}) {\n  function handleClick(e) {\n    onClick({ value, isMine, isFlagged, isRevealed })\n  }\n\n  function handleRightClick(e) {\n    e.preventDefault()\n    onRightClick({ value, isMine, isFlagged, isRevealed })\n  }\n\n  if (!isRevealed && isFlagged) {\n    return <Flag onClick={handleClick} onContextMenu={handleRightClick} />\n  } else if (isRevealed && isMine) {\n    return <Mine onClick={handleClick} onContextMenu={handleRightClick} />\n  } else if (isRevealed) {\n    return (\n      <Visible\n        onClick={handleClick}\n        value={value}\n        onContextMenu={handleRightClick}\n      />\n    )\n  } else {\n    return <Container onClick={handleClick} onContextMenu={handleRightClick} />\n  }\n}\n","import Cell from './Cell'\n\nexport default Cell\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  display: flex;\n  flex-flow: column;\n  width: 600px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  padding: 4px;\n  align-items: center;\n  margin: 10px;\n`\n\nconst StatsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: 1fr;\n  font-size: 0.85rem;\n  text-align: center;\n  padding: 4px;\n  width: 100%;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  font-size: 0.8rem;\n`\n\nconst Button = styled.button`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  outline: 0;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 4px;\n  margin: 4px;\n  font-family: 'Open Sans';\n`\n\nconst Text = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  margin: 4px;\n  font-family: 'Open Sans';\n`\n\nconst Fill = styled.div`\n  flex-grow: 1;\n`\n\nconst Divider = styled.hr`\n  width: 100%;\n  color: #ccc;\n  margin: 2px;\n`\n\nexport default function Header({\n  rows,\n  cols,\n  mines,\n  flags,\n  onNewGameClick = () => {},\n}) {\n  function handleClick(difficulty) {\n    onNewGameClick(difficulty)\n  }\n\n  return (\n    <Container>\n      <StatsContainer>\n        <div>Rows: {rows}</div>\n        <div>Cols: {cols}</div>\n        <div>Mines: {mines}</div>\n        <div>Flags: {flags}</div>\n      </StatsContainer>\n      <Divider />\n      <ButtonContainer>\n        <Fill />\n        <Text>New:</Text>\n        <Button onClick={() => handleClick('beginner')}>Beginner</Button>\n        <Button onClick={() => handleClick('intermediate')}>\n          Intermediate\n        </Button>\n        <Button onClick={() => handleClick('expert')}>Expert</Button>\n        <Fill />\n      </ButtonContainer>\n    </Container>\n  )\n}\n","import Header from './Header'\n\nexport default Header\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport HeaderComponent from 'components/Header'\nimport { selectHeader, newGame } from './slice'\n\nexport default function Header() {\n  const data = useSelector(selectHeader)\n  const dispatch = useDispatch()\n\n  function ng(rows, cols, mines) {\n    return newGame({ rows, cols, mines })\n  }\n\n  function handleNewGame(difficulty) {\n    switch (difficulty) {\n      case 'intermediate':\n        dispatch(ng(16, 16, 40))\n        break\n      case 'expert':\n        dispatch(ng(16, 30, 99))\n        break\n      default:\n        dispatch(ng(9, 9, 10))\n    }\n  }\n  return <HeaderComponent {...data} onNewGameClick={handleNewGame} />\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport GameWrapper from 'components/GameWrapper'\nimport CellGrid from 'components/CellGrid'\nimport Cell from 'components/Cell'\nimport Header from './Header'\nimport { selectGame, initialize, revealCell, flagCell } from './slice'\n\nexport default function Game() {\n  const { board, initialized, cols, rows } = useSelector(selectGame)\n  const dispatch = useDispatch()\n\n  function handleCellClick(cell) {\n    return function () {\n      const { row, col } = cell.coords\n      if (!initialized) dispatch(initialize({ row, col }))\n      else dispatch(revealCell({ row, col }))\n    }\n  }\n\n  function handleCellRightClick(cell) {\n    return function () {\n      const { row, col } = cell.coords\n      if (!initialized) return\n      dispatch(flagCell({ row, col }))\n    }\n  }\n\n  return (\n    <GameWrapper>\n      <Header />\n      <CellGrid rows={rows} cols={cols}>\n        {board\n          .flatMap((c) => c)\n          .map((cell) => (\n            <Cell\n              key={cell.coords.key}\n              onClick={handleCellClick(cell)}\n              onRightClick={handleCellRightClick(cell)}\n              {...cell}\n            />\n          ))}\n      </CellGrid>\n    </GameWrapper>\n  )\n}\n","import React from 'react'\nimport Game from 'features/game/Game'\n\nexport default function App() {\n  return <Game />\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from 'app/store'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}